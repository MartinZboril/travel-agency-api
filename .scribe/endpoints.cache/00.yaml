## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/travels
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Travels'
      description: 'Returns paginated list of travels.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9958e389-5edf-48eb-8ecd-e058985cf3ce","name":"First travel", ...}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/travels/{travel_slug}/tours'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Travel Tours'
      description: 'Returns paginated list of tours by travel slug.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      travel_slug:
        name: travel_slug
        description: 'Travel slug.'
        required: false
        example: '"first-travel"'
        type: string
        custom: []
    cleanUrlParameters:
      travel_slug: '"first-travel"'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      priceFrom:
        name: priceFrom
        description: ''
        required: false
        example: '"123.45"'
        type: number.
        custom: []
      priceTo:
        name: priceTo
        description: ''
        required: false
        example: '"234.56"'
        type: number.
        custom: []
      dateFrom:
        name: dateFrom
        description: ''
        required: false
        example: '"2023-06-01"'
        type: date.
        custom: []
      dateTo:
        name: dateTo
        description: ''
        required: false
        example: '"2023-07-01"'
        type: date.
        custom: []
      sortBy:
        name: sortBy
        description: ''
        required: false
        example: '"price"'
        type: string.
        custom: []
      sortOrder:
        name: sortOrder
        description: ''
        required: false
        example: '"asc" or "desc"'
        type: string.
        custom: []
    cleanBodyParameters:
      priceFrom: '"123.45"'
      priceTo: '"234.56"'
      dateFrom: '"2023-06-01"'
      dateTo: '"2023-07-01"'
      sortBy: '"price"'
      sortOrder: '"asc" or "desc"'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9958e389-5edf-48eb-8ecd-e058985cf3ce","name":"Tour on Sunday","starting_date":"2023-06-11","ending_date":"2023-06-16", ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/travels
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Travel'
      description: 'Creates a new Travel record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_public:
        name: is_public
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: accusamus
        type: string
        custom: []
      number_of_days:
        name: number_of_days
        description: ''
        required: true
        example: 4
        type: integer
        custom: []
    cleanBodyParameters:
      is_public: false
      name: qui
      description: accusamus
      number_of_days: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"996a36ca-2693-4901-9c55-7136e68d81d5","name":"My new travel 234","slug":"my-new-travel-234", ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name has already been taken.","errors":{"name":["The name has already been taken."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/travels/{travel_id}/tours'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Tour'
      description: 'Creates a new Tour record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      travel_id:
        name: travel_id
        description: 'The ID of the travel.'
        required: true
        example: 729afffc-0b94-11ee-93f7-04421a4b5406
        type: string
        custom: []
    cleanUrlParameters:
      travel_id: 729afffc-0b94-11ee-93f7-04421a4b5406
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: est
        type: string
        custom: []
      starting_date:
        name: starting_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-16T11:04:29'
        type: string
        custom: []
      ending_date:
        name: ending_date
        description: 'Must be a valid date. Must be a date after <code>starting_date</code>.'
        required: true
        example: '2113-05-08'
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 62807333.4
        type: number
        custom: []
    cleanBodyParameters:
      name: est
      starting_date: '2023-06-16T11:04:29'
      ending_date: '2113-05-08'
      price: 62807333.4
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"996c6462-7c18-4b64-bf71-4d6832240b62","name":"Tour for travel 234","slug":"tour-for-travel-234", ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name field is required.","errors":{"name":["The name field is required."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/travels/{travel_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Travel'
      description: 'Updates new Travel record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      travel_id:
        name: travel_id
        description: 'The ID of the travel.'
        required: true
        example: 729afffc-0b94-11ee-93f7-04421a4b5406
        type: string
        custom: []
    cleanUrlParameters:
      travel_id: 729afffc-0b94-11ee-93f7-04421a4b5406
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_public:
        name: is_public
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: minus
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: mollitia
        type: string
        custom: []
      number_of_days:
        name: number_of_days
        description: ''
        required: true
        example: 10
        type: integer
        custom: []
    cleanBodyParameters:
      is_public: false
      name: minus
      description: mollitia
      number_of_days: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"996a36ca-2693-4901-9c55-7136e68d81d5","name":"My new travel 234", ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name has already been taken.","errors":{"name":["The name has already been taken."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Login'
      description: 'Login with the existing user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: nathen91@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '~"Q/#<5b4~U5@X&KRZ'
        type: string
        custom: []
    cleanBodyParameters:
      email: nathen91@example.net
      password: '~"Q/#<5b4~U5@X&KRZ'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"access_token":"1|a9ZcYzIrLURVGx6Xe41HKj1CrNsxRxe4pLA2oISo"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"error": "The provided credentials are incorrect."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
